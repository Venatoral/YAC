(define main
  (lambda ()
    (define i 1024)
    (define right (%symbol-addr str_right))
    (define wrong (%symbol-addr str_wrong))
    (%funcall printf (%symbol-addr str1)
	      i (%sal i 1) (%sal i 2)
	      (%sar i 1) (%sar i 2))

    (%funcall printf (if (%bitor 0 1) right wrong))
    (%funcall printf (if (%bitor 0 0) wrong right))
    (%funcall printf (if (%bitand 0 0) wrong right))
    (%funcall printf (if (%bitand 1 0) wrong right))
    (%funcall printf (if (%bitand 0 1) wrong right))
    (%funcall puts (if (%bitand 1 1) right wrong))

    (define b 255)
    (define c 254)
    (define e 1)
    (define f 2)
    (%funcall printf (%symbol-addr str2)
	      (%bitand b 16) (%bitor c 1))
    (define d (%sal e f))
    (%funcall putInt d)
    0))

(define str1 "i=%ld, i<<1=%ld, i<<2=%ld, i>>1=%ld, i>>2=%ld\n")
(define str2 "255&16=%ld, 254|1=%ld\n")
(define str_right ".")
(define str_wrong "Test failed\n")

